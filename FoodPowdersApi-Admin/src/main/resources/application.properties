#spring.application.name=FoodPowdersApi
#spring.autoconfigure.exclude=com.google.cloud.spring.autoconfigure.storage.GcpStorageAutoConfiguration
#firebase.storage.bucketname=gs://foodpowderwebapp.firebasestorage.app
#spring.main.allow-bean-definition-overriding=true

# General Google Cloud configuration
#spring.cloud.gcp.project-id=foodpowderwebapp
#spring.cloud.gcp.credentials.location=classpath:serviceAccountKey.json

#spring.cloud.gcp.credentials.enabled=false
#spring.cloud.gcp.project-id=disabled


# Firestore specific
#spring.cloud.gcp.firestore.enabled=true

# Storage specific
#spring.cloud.gcp.storage.enabled=true

# Disable Spring Cloud GCP Firestore autoconfiguration
#spring.autoconfigure.exclude=com.google.cloud.spring.autoconfigure.firestore.GcpFirestoreAutoConfiguration

#jwt.secret.key = akilankr1234567890securesecretkeyjwty2025

#server.port=${PORT:10000}
#server.address=0.0.0.0
spring.application.name=FoodPowdersApi

# ✅ Disable Google Cloud auto-credentials loading
spring.cloud.gcp.credentials.enabled=false
spring.cloud.gcp.project-id=disabled

# ✅ Explicitly disable auto-config for Firestore and Storage
spring.autoconfigure.exclude=\
  com.google.cloud.spring.autoconfigure.firestore.GcpFirestoreAutoConfiguration,\
  com.google.cloud.spring.autoconfigure.storage.GcpStorageAutoConfiguration

# ❌ You enabled Firestore and Storage even after excluding their auto-config
# Comment these out — they aren’t needed unless you're *using* Spring GCP Firestore/Storage
# spring.cloud.gcp.firestore.enabled=true
# spring.cloud.gcp.storage.enabled=true

# ✅ Your JWT key
jwt.secret.key=akilankr1234567890securesecretkeyjwty2025

# ✅ Web server settings — PORT comes from Render
server.port=${PORT:10000}
server.address=0.0.0.0
